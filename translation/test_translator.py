import speech_recognition as sr
import argostranslate.package
import argostranslate.translate
from gtts import gTTS
import os
import sys

# Supported output languages
LANGUAGES = {
    "hi": "Hindi",
    "es": "Spanish",
    "de": "German"
}

FROM_LANGUAGE_CODE = "en"

# Expanded medical glossary
medical_glossary = {
    "fever": {"hi": "‡§¨‡•Å‡§ñ‡§æ‡§∞", "es": "fiebre", "de": "Fieber"},
    "cough": {"hi": "‡§ñ‡§æ‡§Ç‡§∏‡•Ä", "es": "tos", "de": "Husten"},
    "headache": {"hi": "‡§∏‡§ø‡§∞‡§¶‡§∞‡•ç‡§¶", "es": "dolor de cabeza", "de": "Kopfschmerzen"},
    "vomiting": {"hi": "‡§â‡§≤‡•ç‡§ü‡•Ä", "es": "v√≥mito", "de": "Erbrechen"},
    "blood pressure": {"hi": "‡§∞‡§ï‡•ç‡§§‡§ö‡§æ‡§™", "es": "presi√≥n arterial", "de": "Blutdruck"},
    "diabetes": {"hi": "‡§Æ‡§ß‡•Å‡§Æ‡•á‡§π", "es": "diabetes", "de": "Diabetes"},
    "chest pain": {"hi": "‡§∏‡•Ä‡§®‡•á ‡§Æ‡•á‡§Ç ‡§¶‡§∞‡•ç‡§¶", "es": "dolor en el pecho", "de": "Brustschmerzen"},
    "cold": {"hi": "‡§∏‡§∞‡•ç‡§¶‡•Ä", "es": "resfriado", "de": "Erk√§ltung"},
    "asthma": {"hi": "‡§¶‡§Æ‡§æ", "es": "asma", "de": "Asthma"},
    "infection": {"hi": "‡§∏‡§Ç‡§ï‡•ç‡§∞‡§Æ‡§£", "es": "infecci√≥n", "de": "Infektion"},
    "injury": {"hi": "‡§ö‡•ã‡§ü", "es": "lesi√≥n", "de": "Verletzung"},
    "fracture": {"hi": "‡§´‡•ç‡§∞‡•à‡§ï‡•ç‡§ö‡§∞", "es": "fractura", "de": "Fraktur"},
    "burn": {"hi": "‡§ú‡§≤‡§®‡§æ", "es": "quemadura", "de": "Verbrennung"},
    "allergy": {"hi": "‡§è‡§≤‡§∞‡•ç‡§ú‡•Ä", "es": "alergia", "de": "Allergie"},
    "high temperature": {"hi": "‡§§‡•á‡§ú‡§º ‡§¨‡•Å‡§ñ‡§æ‡§∞", "es": "alta temperatura", "de": "hohes Fieber"},
    "low blood pressure": {"hi": "‡§ï‡§Æ ‡§∞‡§ï‡•ç‡§§‡§ö‡§æ‡§™", "es": "presi√≥n baja", "de": "niedriger Blutdruck"},
    "heart attack": {"hi": "‡§¶‡§ø‡§≤ ‡§ï‡§æ ‡§¶‡•å‡§∞‡§æ", "es": "ataque al coraz√≥n", "de": "Herzinfarkt"},
    "stroke": {"hi": "‡§∏‡•ç‡§ü‡•ç‡§∞‡•ã‡§ï", "es": "derrame cerebral", "de": "Schlaganfall"},
    "cancer": {"hi": "‡§ï‡•à‡§Ç‡§∏‡§∞", "es": "c√°ncer", "de": "Krebs"},
    "tumor": {"hi": "‡§ó‡§æ‡§Ç‡§†", "es": "tumor", "de": "Tumor"},
    "pregnancy": {"hi": "‡§ó‡§∞‡•ç‡§≠‡§æ‡§µ‡§∏‡•ç‡§•‡§æ", "es": "embarazo", "de": "Schwangerschaft"},
    "labor pain": {"hi": "‡§™‡•ç‡§∞‡§∏‡§µ ‡§™‡•Ä‡§°‡§º‡§æ", "es": "dolor de parto", "de": "Wehenschmerz"},
    "delivery": {"hi": "‡§™‡•ç‡§∞‡§∏‡§µ", "es": "parto", "de": "Entbindung"},
    "urine infection": {"hi": "‡§Æ‡•Ç‡§§‡•ç‡§∞ ‡§∏‡§Ç‡§ï‡•ç‡§∞‡§Æ‡§£", "es": "infecci√≥n urinaria", "de": "Harnwegsinfektion"},
    "painkiller": {"hi": "‡§¶‡§∞‡•ç‡§¶ ‡§®‡§ø‡§µ‡§æ‡§∞‡§ï", "es": "analg√©sico", "de": "Schmerzmittel"},
    "surgery": {"hi": "‡§∏‡§∞‡•ç‡§ú‡§∞‡•Ä", "es": "cirug√≠a", "de": "Operation"},
    "operation": {"hi": "‡§ë‡§™‡§∞‡•á‡§∂‡§®", "es": "operaci√≥n", "de": "Operation"},
    "oxygen": {"hi": "‡§ë‡§ï‡•ç‡§∏‡•Ä‡§ú‡§®", "es": "ox√≠geno", "de": "Sauerstoff"},
    "anemia": {"hi": "‡§ñ‡•Ç‡§® ‡§ï‡•Ä ‡§ï‡§Æ‡•Ä", "es": "anemia", "de": "An√§mie"},
    "jaundice": {"hi": "‡§™‡•Ä‡§≤‡§ø‡§Ø‡§æ", "es": "ictericia", "de": "Gelbsucht"},
    "diarrhea": {"hi": "‡§¶‡§∏‡•ç‡§§", "es": "diarrea", "de": "Durchfall"},
    "constipation": {"hi": "‡§ï‡§¨‡•ç‡§ú", "es": "estre√±imiento", "de": "Verstopfung"},
    "medicine": {"hi": "‡§¶‡§µ‡§æ", "es": "medicina", "de": "Medikament"},
    "doctor": {"hi": "‡§°‡•â‡§ï‡•ç‡§ü‡§∞", "es": "m√©dico", "de": "Arzt"},
    "nurse": {"hi": "‡§®‡§∞‡•ç‡§∏", "es": "enfermera", "de": "Krankenschwester"},
    "hospital": {"hi": "‡§Ö‡§∏‡•ç‡§™‡§§‡§æ‡§≤", "es": "hospital", "de": "Krankenhaus"},
}

def setup_translation_models():
    print("üîß Checking/installing translation models...")
    argostranslate.package.update_package_index()
    installed = argostranslate.package.get_installed_packages()
    available = argostranslate.package.get_available_packages()

    for to_lang in LANGUAGES.keys():
        if not any(p.from_code == FROM_LANGUAGE_CODE and p.to_code == to_lang for p in installed):
            pkg = next((p for p in available if p.from_code == FROM_LANGUAGE_CODE and p.to_code == to_lang), None)
            if pkg:
                print(f"‚¨áÔ∏è Installing model: {FROM_LANGUAGE_CODE} ‚Üí {to_lang}")
                pkg.install()
            else:
                print(f"‚ùå Model for {FROM_LANGUAGE_CODE} ‚Üí {to_lang} not found")

def enhance_with_medical_terms(text, lang_code):
    for term, translations in medical_glossary.items():
        if term.lower() in text.lower() and lang_code in translations:
            text = text.replace(term.lower(), translations[lang_code])
    return text

def speak_text(text, lang_code):
    try:
        tts = gTTS(text=text, lang=lang_code)
        filename = f"speech_{lang_code}.mp3"
        tts.save(filename)
        os.system(f"start {filename}" if sys.platform == "win32" else f"xdg-open {filename}")
    except Exception as e:
        print(f"‚ùå TTS Error: {e}")

def main():
    setup_translation_models()
    recognizer = sr.Recognizer()

    try:
        with sr.Microphone() as source:
            print("\nüéôÔ∏è Speak in English...")
            recognizer.adjust_for_ambient_noise(source)
            audio = recognizer.listen(source)
            print("üß† Recognizing using Whisper...")
            text = recognizer.recognize_whisper(audio, language="english")
            print(f"\nüó£Ô∏è You said: {text}")

            # Translate and speak in each language
            for lang_code, lang_name in LANGUAGES.items():
                translated = argostranslate.translate.translate(text, FROM_LANGUAGE_CODE, lang_code)
                translated = enhance_with_medical_terms(translated, lang_code)

                print(f"\nüåç Translated to {lang_name}: {translated}")
                speak_text(translated, lang_code)

    except sr.UnknownValueError:
        print("‚ùå Could not understand audio. Please try again.")
    except Exception as e:
        print(f"‚ö†Ô∏è Error: {e}")

if __name__ == "__main__":
    main()
